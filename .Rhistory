finalSel
estaselect$ID == finalSel$ID
finalSel$Ponderacion <- estaselect$Ponderacion[finalSel$ID == estaselect$Ponderacion]
finalSel$G0*estaselect$Ponderacion[finalSel$ID==ID]
finalSel$G0*estaselect$Ponderacion[finalSel$ID==estaselect$ID]
pruebaSlpit
lapply(pruebaSlpit, function(x){ x$Ponderacion <- estaselect$Ponderacion[x$ID]    })
lapply(pruebaSlpit, function(x){ x <-  cbind(estaselect$Ponderacion[x$ID])    })
?lapply
lapply(pruebaSlpit, function(x){ cbind(estaselect$Ponderacion[x$ID])    })
?sapply
finalSel
unique(finalSel$Ponderacion)
estaselect
?aggregate
sapply(pruebaSlpit, function(x) { na.omit(estaselect$Ponderacion[estaselect$ID == x$ID])*x$G0  })
lapply(pruebaSlpit, function(x) { na.omit(estaselect$Ponderacion[estaselect$ID == x$ID])*x$G0  })
?rep
finalSel[estaselect$ID]
finalSel[estaselect$ID == ID]
finalSel[estaselect$ID == finalSel$ID]
finalSel[estaselect$ID == finalSel$ID,]
finalSel[,estaselect$ID == finalSel$ID]
finalSel[ID == 28.2]
finalSel[ID == estaselect$ID]
estaselect
cbind(finalSel, estaselect$Ponderacion)
finalSel
if(finalSel$ID == estaselect$ID){ finalSel$Ponderacion <- estaselect$Ponderacion }
if( estaselect$ID %in% finalSel$ID ){ finalSel$Ponderacion <- estaselect$Ponderacion }
ind
pruebaSlpit
lapply(pruebaSlpit, function(x) print(x))
lapply(pruebaSlpit, function(x) {print(x)})
lapply(pruebaSlpit, cbind(1))
estaselect$Ponderacion[ID == 45.8]
estaselect$Ponderacion[estaselect$ID == 45.8]
estaselect$Ponderacion[estaselect$ID == finalSel$ID]
?rep.IDate
?rep
PondVec <- rep(pondera, times = 365)
PondVec
PondVec <- rep(pondera, each = 365)
PondVec
PondVec <- rep(c(estaselect$ID, estaselect$Ponderacion, each = 365)
)
PondVec <- rep(c(estaselect$ID, estaselect$Ponderacion), each = 365)
PondVec
rm(PondVec)
?runif
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?Map
?mapply
shiny::runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
EstacionesSelect <- DatosSiar[ sqrt((abs(DatosSiar$lon+4))^2 + (abs(DatosSiar$lat-40))^2) <= 1]
EstacionesSelect
EstacionesSelect$Dist <- sqrt((abs(EstacionesSelect$lon+4))^2 + (abs(EstacionesSelect$lat-40))^2)
EstacionesSelect
pondera <- (1/EstacionesSelect$Dist^2)/sum(1/EstacionesSelect$Dist^2)
EstacionesSelect$Ponderacion <- pondera
ind <- which(EstacionesSelect$ID %in% AllData$ID)
finalSel <- data.frame()
finalSel <- rbind(finalSel, AllData[ind,])
finalSel
EstacionesSelect
ind <- which(EstacionesSelect$ID %in% AllData$ID)
ind
ind <- which( AllData$ID %in% EstacionesSelect$ID)
ind
finalSel <- data.frame()
finalSel <- rbind(finalSel, AllData[ind,])
finalSel
for( i in 1:lenght(EstacionesSelect$ID)){
if(EstacionesSelect$ID[i] %in% finalSel$ID){
ind2 <- which(EstacionesSelect$ID[i] %in% finalSel$ID)
finalSel$Ponderacion[ind2] <- EstacionesSelect$Ponderacion[i]
}
}
for( i in 1:length(EstacionesSelect$ID)){
if(EstacionesSelect$ID[i] %in% finalSel$ID){
ind2 <- which(EstacionesSelect$ID[i] %in% finalSel$ID)
finalSel$Ponderacion[ind2] <- EstacionesSelect$Ponderacion[i]
}
}
finalSel
EstacionesSelect
ind2
for( i in 1:length(EstacionesSelect$ID)){
if(EstacionesSelect$ID[i] %in% finalSel$ID){
ind2 <- which(finalSel$ID %in% EstacionesSelect$ID[i])
finalSel$Ponderacion[ind2] <- EstacionesSelect$Ponderacion[i]
}
}
finalSel
print(finalSel)
finaSel2 <- finalSel
finalSel2$G0 <- finalSel2$G0*finalSel2$Ponderacion
finaSel2$G0 <- finaSel2$G0*finaSel2$Ponderacion
finaSel2
print.data.frame(finaSel2)
finaSel2[c(365, 800, 1200, 1600 , 2000),]
EstacionesSelect
unique(transform(finaSel2, amount=ave(amount, Fecha, FUN=sum),
count=ave(amount, Fecha, FUN=length)))
unique(transform(finaSel2, G0d=ave(amount, Fecha, FUN=sum),
count=G0d(amount, Fecha, FUN=length)))
unique(transform(finaSel2, G0=ave(amount, Fecha, FUN=sum),
count=ave(G0, Fecha, FUN=length)))
unique(transform(finaSel2, G0=ave(G0, Fecha, FUN=sum),
count=ave(G0, Fecha, FUN=length)))
finalSel
Prueba <- unique(transform(finaSel2, G0=ave(G0, Fecha, FUN=sum),
count=ave(G0, Fecha, FUN=length)))
Prueba[1:366,]
Prueba[1:370,]
Prueba[500,]
?ave
unique(finalSel$Fecha)
install.packages('plyr')
install.packages("plyr")
library(plyr)
library(plyr)
install.packages("plyr")
?ddply
install.packages("plyr")
install.packages("plyr")
library(plyr)
?ddply
finaSel2 <- finalSel
finaSel2
finaSel2$G0 <- finaSel2$G0*finaSel2$Ponderacion
Prueba <- ddply(finaSel2,.(Fecha),summarize,sum=sum(G0),number=length(G0))
Prueba
Prueba <- ddply(finaSel2,.(Fecha,G0),summarize,sum=sum(G0),number=length(G0))
Prueba
Prueba <- ddply(finaSel2,.(Fecha),summarize,sum=sum(G0),number=length(G0))
Prueba <- ddply(finaSel2,.(Fecha),summarize,sum=sum(G0, Ta),number=length(G0))
Prueba
Prueba <- ddply(finaSel2,.(Fecha),summarize,G0=sum(G0), Ta=sum(Ta),number=length(G0))
Prueba
shiny::runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
finalSel
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?fProd
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?prodGCPV()
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?trya
?try
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
shiny::runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
??ddply
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?fProd
lat=37.2;
G0dm=c(2766, 3491, 4494, 5912, 6989, 7742, 7919, 7027, 5369, 3562, 2814,
2179)
Ta=c(10, 14.1, 15.6, 17.2, 19.3, 21.2, 28.4, 29.9, 24.3, 18.2, 17.2, 15.2)
prom=list(G0dm=G0dm, Ta=Ta)
prodFixed<-prodGCPV(lat=lat,dataRad=prom, keep.night=FALSE)
xyplot(prodFixed)
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
'column+'
?column
?row
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?renderDataTable
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?outoput
??output
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?calcG0
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?calcG0
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?G0
?'g0'
??G0
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
G0dm=c(2.766,3.491,4.494,5.912,6.989,7.742,7.919,7.027,5.369,3.562,2.814,2.179)*1000;
Ta=c(10, 14.1, 15.6, 17.2, 19.3, 21.2, 28.4, 29.9, 24.3, 18.2, 17.2,
15.2)
g0 <- calcG0(lat=37.2, modeRad='prom', dataRad=list(G0dm=G0dm, Ta=Ta))
g0
g0$G0d
as.data.frameD(g0)
as.data.frameY(g0)
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
g0
print(g0)
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?xyplot
mean(g0)
g0
as.data.frameD(g0)
mean(as.data.frameD(g0))
mean(as.data.frameD(g0)$G0d)
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?addCircleMarkers
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
EstSelect <- DatosSiar[sqrt((abs(DatosSiar$lon+2.57))^2 + (abs(DatosSiar$lat-40.11))^2) <= 0.1]
EstSelect
EstSelect <- DatosSiar[sqrt((abs(DatosSiar$lon+2.57))^2 + (abs(DatosSiar$lat-40.11))^2) <= 0.5]
EstSelect
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
EstacionesSelect
EstacionesSelect
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
View(EstacionesSelect)
View(EstacionesSelect)
View(EstacionesSelect)
EstSelect
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
View(EstacionesSelect)
shiny::runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
library(shiny)
library(ggmap)
library(solaR)
library(htmltools)
library(rsconnect)
library(plyr)
source("SiarData.R")
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
library(data.table)
if(!exists("DatosSiar")){
##Carga de DatosSiar para la creación de marcadores y popups
DatosSiar <- fread("data/Siar_Data.csv",  encoding="UTF-8")
DatosSiar$ID <- with(DatosSiar,
paste(N_Provincia, N_Estacion, sep = '.'))
}
if(!exists("AllData")){
##Lista para cargar los archivos con los datos de las estaciones
myData <- list.files("data/", pattern = "Estaciones_Siar")
##Leemos los ficheros y los metemos en una lista
old <- setwd('data/')
EstacionesSiar <- lapply(myData, read.csv2,
fileEncoding = "UTF-16LE")
setwd(old)
##Merge de todos los dataframes en uno
AllData <- rbindlist(EstacionesSiar, fill = TRUE)
## Selecciono variables de interés
AllData <- AllData[, c(1, 2, 3, 6, 11), with = FALSE]
names(AllData)[c(4, 5)] <- c("Ta", "G0")
AllData[ ,
ID := paste(IdProvincia,
IdEstacion,
sep = '.')
]
## Índice temporal como POSIXct para calcG0 etc.
AllData[,
Fecha := as.POSIXct(Fecha,
format = '%d/%m/%Y')
]
##Paso de MJ/m2 a Wh/m2
AllData[,
G0 := G0*1000/3.6
]
}
if(!exists('Datos_Modulos')|!exists('Datos_Inversores')){
Datos_Modulos <- read.csv2(file = "data/Datos_Modulos.csv")
Datos_Inversores <- read.csv2(file = "data/Datos_inversores.csv")
}
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
library(shiny)
library(ggmap)
library(leaflet)
source("SiarData.R")
leaflet()
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
leaflet() %>%
addTiles() %>%
leaflet() %>%
addTiles()
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
leaflet() %>%
addTiles('http://stamen-tiles-{s}.a.ssl.fastly.net/terrain/{z}/{x}/{y}.{ext}')
leaflet() %>%
addTiles('http://stamen-tiles-{s}.a.ssl.fastly.net/terrain/')
leaflet() %>%
addTiles()
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
shiny::runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?prodGCPV
lat=37.2;
G0dm=c(2766, 3491, 4494, 5912, 6989, 7742, 7919, 7027, 5369, 3562, 2814,
2179)
Ta=c(10, 14.1, 15.6, 17.2, 19.3, 21.2, 28.4, 29.9, 24.3, 18.2, 17.2, 15.2)
prom=list(G0dm=G0dm, Ta=Ta)
###Comparison of different tracker methods
prodFixed<-prodGCPV(lat=lat,dataRad=prom, keep.night=FALSE
)
prodEx
prodFixed
prodFixed[Generator]
prodFixed['Generator']
as.data.frameD(prodFixed)
as.data.frameD(prodFixed)$Eac
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
prodFixed
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
fProd()
fProd
gen1 = list(Nms = 10, Nmp = 11)
lat=37.2;
G0dm=c(2766, 3491, 4494, 5912, 6989, 7742, 7919, 7027, 5369, 3562, 2814,
2179)
Ta=c(10, 14.1, 15.6, 17.2, 19.3, 21.2, 28.4, 29.9, 24.3, 18.2, 17.2, 15.2)
prom=list(G0dm=G0dm, Ta=Ta)
###Comparison of different tracker methods
prodFixed<-prodGCPV(lat=lat,dataRad=prom, keep.night=FALSE, generator = gen1)
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
as.data.frameD(prodFixed)$Eac
class(as.data.frameD(prodFixed)$Eac)
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
xyplot(as.data.frameD(prodFixed)$Eac)
xyplot(as.numeric(as.data.frameD(prodFixed)$Eac)
)
test1 <- as.data.frameD(prodFixed)
test1
test1$Eac
xyplot(test1$Eac)
test2 <- test1$Eac
xyplot(test2)
?xyplot
plot(1:test2, test2)
plot(c(1:test2), test2)
test2
plot(c(1:test2), c(test2)
)
plot(c(1:length(test2), test2)
plot(c(1:length(test2)), test2)
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?plot
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?renderPlot
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?numericInput
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
shiny::runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?calcGef
??`Gef-class`
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
??fProd
??`ProdGCPV-class`
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
shiny::runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
shiny::runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
head(AllData)
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
xyplot(AllData$G0)
AllData$G0
xyplot(as.numeric(AllData$G0)
)
class(AllData$G0)
xyplot(AllData)
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?plot
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?as.Date
as.Date( AllData$Fecha[1], format = "%d-%m-%Y")
as.Date( AllData$Fecha[1], "%d-%m-%Y")
as.Date( AllData$Fecha[1], "%d%m%Y")
as.Date( AllData$Fecha[1], format = "%d%m%Y")
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
easyFormat <- function(x, y){
format(round(x,y), nsmall = y)
}
easyFormat(AllData,2)
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?prodGCPV
??`ProdGCPV-class`
?prodGCPV
prodAguiarFixed <- prodGCPV(lat=41,
modeRad='aguiar',
dataRad=G0dm,
keep.night=FALSE)
lat=37.2;
G0dm=c(2766, 3491, 4494, 5912, 6989, 7742, 7919, 7027, 5369, 3562, 2814,
2179)
Ta=c(10, 14.1, 15.6, 17.2, 19.3, 21.2, 28.4, 29.9, 24.3, 18.2, 17.2, 15.2)
prom=list(G0dm=G0dm, Ta=Ta)
###Comparison of different tracker methods
prodFixed<-prodGCPV(lat=lat,dataRad=prom, keep.night=FALSE)
slot(prodFixed, prod)
slot(prodFixed, prodD)
prodFixed
slot(prodFixed, 'prodD')
slot(prodFixed, 'prodI')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?as.data.frame
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?prodGCPV
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
